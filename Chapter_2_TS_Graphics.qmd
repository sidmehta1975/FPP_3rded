---
title: "2.Time Series Graphics"
format: 
  html:
    fig-width: 8
    fig-height: 10
execute: 
  echo: false
  warning: false
editor: visual
---

## Chapter 2 Time-Series Graphics, 18th march 2025

### Load libraries

```{r echo=FALSE, eval=TRUE, warning=FALSE}

library(fpp3)
library(fpp2)

```

### Chapter 2.2

#### Ansett airlines data

```{r eval=TRUE, warning=FALSE, echo=FALSE}

str(ansett)

```

```{r eval=TRUE, warning=FALSE, echo=FALSE}

ansett


```

Dataset containing 7407 rows and 4 coumns, with an index that captures weekly data. The unique key is captured by the unique combination of "Airports-Class" and the dataset contains 30 such unique keys or time-series.

```{r eval=TRUE, warning=FALSE, echo=FALSE}

melsyd_economy <- ansett |>
  filter(Airports == "MEL-SYD", Class == "Economy") |>
  mutate(Passengers = Passengers/1000)

autoplot(melsyd_economy, Passengers) +
  labs(title = "Ansett airlines economy class",
       subtitle = "Melbourne-Sydney",
       y = "Passengers ('000)")
```

Observations:

-   Seasonality within the year is captured across years

-   Two unsual dips in the ts: 1) 1989, whyen passenger count was zero; 2) 1992, passenger count at 15K

-   Data tends to trend upwards in th 1991-92 period

-   Perhaps, there is a downward trend from 1988-90?

### Chapter 2.3

#### Trend:

-   Long-term direction of the time-series. It may slope upwards or downwards. The trend is the ts can change over-time. It does not need to be uni-directional. This is called "changing direction" in the ts.

#### Seasonality:

-   Repetetive patterns in the ts at a known frequency is called "seasonality". Example - day-of-week affect on traffic volume, monthly-sales patterns for commodities such as umbrellas.

#### Cycle:

-   Repetetive patterns in data but not at known frequency is called "cycle". Example - The Chemical industry goes through cycles of boom and bust. This is inevitable, the only thing that changes and is perhasp not predictable is the gap between these cycles. The duration of these repeated pattern is atleast 2-years.

#### Cycle vs Seasonality?

-   Seasonality is related to the calendar features ie the patterns tends to repat every year

    -   Cycles occur at a frequency greater than 2-years

-   magnitude of cycles tends to be greater than that of seasonal pattern

### Chapter 2.4

#### Seasonal plot

```{r eval=TRUE, warning=FALSE, echo=FALSE}

vic_elec
```

-   Victoria electricity consumption data.

-   52608 rows and 5 columns. Indexed every 30 minutes.

```{r eval=TRUE, warning=FALSE, echo=FALSE}

vic_elec |> gg_season(Demand, period = "day") +
  theme(legend.position = "none") +
  labs(y="MWh", title="Electricity demand: Victoria")

```

Observation:

-   Seasonal pattern recorded at a hour-of-day frequency

```{r eval=TRUE, warning=FALSE, echo=FALSE}

vic_elec |> gg_season(Demand, period = "week") +
  theme(legend.position = "none") +
  labs(y="MWh", title="Electricity demand: Victoria")
```

-   Seasonality at day-of-week (and hour-of-day) frequency

-   The data repeats the hour-of-day pattern for all weekdays

-   The electricity-consumption tends to be the same theough the week ad dips slighly for Saturday & Sunday!

```{r eval=TRUE, warning=FALSE, echo=FALSE}

vic_elec |> gg_season(Demand, period = "year") +
  labs(y="MWh", title="Electricity demand: Victoria")

```

Observation

-   Zooming out to look at the pattern on a yearly-basis.

-   The fact that the data-patterns overlap across years suggests that there is not much of a trend to pick-up!

```{r eval=TRUE, warning=FALSE, echo=FALSE}

autoplot(vic_elec,Demand) +
  labs(y="MWh", title="Electricity demand: Victoria")

```

Observation:

-   Yes, it's true, that there is not much of a trend in this dataset!

### Chapter 2.5: Seasonality

#### Turning data into a tsibble

```{r eval=TRUE, warning=FALSE, echo=FALSE}

a10_tsibble <- as_tsibble(a10, 
                          index = "Month",
                          key=c("Year", "Month"))

a10_tsibble <- a10_tsibble |>
  rename(Cost=value)
  
a10_tsibble

```

-   The original ts data had monthly-data. since that was the only time dimension, that becomes the index.

-   Key is the other dimension in a tsibble. Key(/s) reflect the subjects for whom the time-series is recorded. In this ts there is no information provided for the key.

-   Cost is the measure that is recorded in the time-series. this reflects the values of the "measure" at monthly (index) time periods.

#### Seasonal sub-series plot

```{r eval=TRUE, warning=FALSE, echo=FALSE}

a10_tsibble |>
  gg_subseries(Cost)+
  labs(
    y = "$ (millions)",
    title = "Australian antidiabetic drug sales"
  )
```

Observations:

-   This is a faceted plot for each season in the data. Since the data was re\[ported at a monthly frequency, seasons were the months.

-   The chart reveals not just the seasonal trend but also the change over time

-   Its clear from the above charts that Jan tends to be the month of highest cost. The blue-lines reflect the average over time.

#### Aus holiday tourism

```{r eval=TRUE, warning=FALSE, echo=FALSE}

holidays <- tourism |>
  filter(Purpose == "Holiday") |>
  group_by(State) |>
  summarise(Trips = sum(Trips))

holidays
```

```{r eval=TRUE, warning=FALSE, echo=FALSE}

autoplot(holidays, Trips)+
  labs(y = "Overnight trips ('000)",
       title = "Australian domestic holidays")

```

Observations:

-   "autoplot" gives all the series in the data. In our case we had 8 keys (States) recording tourist volume at a quarterly period (index)

-   NSW has the highest volume; Victoria has biggeest variance; Western-Australia has a jump in its trend in 2015!

```{r eval=TRUE, warning=FALSE, echo=FALSE, fig.width=8, fig.height=10}

holidays |>
  gg_subseries(Trips)+
  labs(
    y = "Overnight trips ('000)",
    title = "Australian domestic holidays"
  )
```

Observations:

-   In general, tourist volume seems to be up across all states in 2015

-   Th blue line depicts the quaretrly-seasonality across states.

    -   Q1 is most popular for Victoria, Tasmania, NSW. South Australia

    -   Q3 is most popular in Northern Territories and Queensland

    -   Western Australia and ACT have no seasonal variation!

```{r eval=TRUE, warning=FALSE, echo=FALSE, fig.width=8, fig.height=10}

gg_season(holidays, Trips) +
  labs(y = "Overnight trips ('000)",
       title = "Australian domestic holidays")
```

### Chapter 2.7: Lags

```{r}

recent_production <- aus_production |>
  filter(year(Quarter) >= 2000)

recent_production |>
  gg_lag(Beer, geom = "point") +
  labs(x = "lag(Beer, k)")
```

Observations:

-   Dots indicate the quarter on the vertical axis.

-   We are plotting yt vs yt-k, k=1..9

-   So for the lag-1 facet, we have yellow on the extreme left suggesting that's a Q4 value vs a Q3 value on the x-axis

-   We also notice that lag-4 and lag-8 line up against a line. This suggests the seasonal nature of the data. Clear indication of quarterly seasonality.

### Chapter 2.8: Autocorelation

```{r}

recent_production |> ACF(Beer, lag_max = 9)

```

Theory:

-   autocorelation: correlation between value of the series that are apart by k periods.

-   r1 = correation between value that are distanced by k=1 time period

-   In general rk = numerator/denomintaor

    -   numerator = sum of product terms such that product is of the form (y_t - y_bar)(y_t-k -y_bar)

        -   the terms summed over the entire time-series T

        -   the starting point for the summation is t=k

        -   so if the time-series has 10 terms ie T=10

        -   we will sum the product of the form in the first bullet for all ks from 2..10

        -   so the numerator will have (10-2)+1= product terms that will be summed

    -   denominator = variance of the time series ie sum t=1..T, terms of the form (y_t - y_bar)\^2

#### Correlogram

```{r}

recent_production |> ACF(Beer) |> autoplot()+
  labs(title = "Australian beer production")

```

Observations:

-   autocorrelations are high and positive when lags are multiples of 4 quarters.

    -   This suggests that there is strong seasonal pattern on a quarterly

-   autocorelation is high and negative for lags that are at periods 2,6,10,14...

    -   This suggests that values are at trough and peaks at these intervals

-   The blue line gives the significnat level for correlations

#### Trend & Seasonality

```{r}

a10_tsibble |> ACF(Cost, lag_max = 48) |>
  autoplot()+
  labs(title = "ACF plot for Australian antidiabetic drug sales")

```

Observations:

-   Since the lag-1 correlation is high, the data has strong trend.

-   We also notice the highest spike at a 12, 24, 26..time interval which suggests stronong correlation with yearly values which is essentially the trend!

-   When the data has only seasonality, the lag-1 will not be this strong.

    -   the lag at the seasonal period will have the strongest correlation.

-   For data that has both trend and seasoanlity, we will likely get charts like th one above.

#### White-noise

```{r}

set.seed(30)
y <- tsibble(sample = 1:50, wn = rnorm(50), index = sample)

y |> ACF(wn) |> autoplot() + labs(title = "White noise", y = "")
```

Observations:

-   The significant bands are at +/- 1.96/sqrt(T) distance from the mean. Thsi gives the 95% confidence-interval for the distribution.

### Exercises:

#### 1.?Bricks

```{r}

aus_production

```

-   Time interval for the series is quarterly

-   autoplot for the Bricks series

```{r}

aus_production |> autoplot(Bricks)

```

-   Adding labels for the axis and a title

```{r}

aus_production |> autoplot(Bricks) +
  labs(title = "Brick production in Australia")+
  scale_y_continuous(name="Bricks in millions")
```

#### 2. Gafa-stock: 

Find the days that correspond to the highest price for each of the stocks in the dataset

```{r}

gafa_stock


```

Peak closing price for each stock symbol:

```{r}

gafa_stock |>
  group_by(Symbol) |>
  filter(Close==max(Close))

```

![](images/clipboard-9133593.png)

#### 6. "aus_arrivals" data run autoplot(), gg_subseries(), gg_season()

```{r}

aus_arrivals
```

```{r}
aus_arrivals |> autoplot(Arrivals/1000)+
  labs(title = "Tourists in asutralia from different countries")+
  scale_y_continuous(name="Tourists in 000s")
```

Observation:

-   The Japanese tourists seem to be trending dwonwards from 1996 onwards

```{r}

aus_arrivals |> gg_subseries(Arrivals/1000)+
  labs(title = "Tourists in asutralia from different countries")+
  scale_y_continuous(name="Tourists in 000s")
```

```{r}

aus_arrivals |> gg_season(Arrivals/1000)+
  labs(title = "Tourists in asutralia from different countries")+
  scale_y_continuous(name="Tourists in 000s")
```

Observation:

-   The plot suggest the clear shift in trend across years. For All countries except Japan, the recent years have higher values

-   The chart also clearly gives us the seasonal pattern and how this has changed over time. Example for the UK tourists the season pattern for highs in Q1 and Q4 ar more pronounced than they were back in the 1980s

#### 10. aus_livestock

```{r}

aus_livestock

```

```{r}
aus_livestock |> count(Animal, sort=TRUE)

```

```{r}
aus_livestock |> count(State, sort=TRUE)
```

```{r}
aus_livestock |>
  filter(State== "Victoria", Animal== "Pigs") |>
  filter_index("1972-07" ~"2018-12") |>
  autoplot()+
  labs(title = "Voume of pigs slaufghtered in Victoria between Jul 1972 to Dec 2018")+
  scale_y_continuous(name="Number of Pigs")
```

Observations:

-   The data appears to have cycles. Between Jan 1990 and Jan 2010, for the twenty-year period we see a trend that grows for 10 years and then falls for the next 10 years.

-   Though the pattern did not quite repeat fro the period 1980-1990, in which case the upward and dwonward trend persist for 5 years each!

-   Does the data have any seasonal pattern?

    ```{r}

    aus_livestock |>
      filter(State== "Victoria", Animal== "Pigs") |>
      filter_index("1972-07" ~"2018-12") |>
      gg_season()+
      labs(title = "Checking for any sesoanlity",
           subtitle = "The data does not suggest any seasonal pattern!")

    ```

```{r}

aus_livestock |>
  filter(State== "Victoria", Animal== "Pigs") |>
  filter_index("1972-07" ~"2018-12") |>
  gg_subseries()+
  labs(title = "Checking for any sesoanlity",
       subtitle = "The data does not suggest any seasonal pattern!")


```

-   Seasonality is not strong!

```{r}

aus_livestock |>
  filter(State== "Victoria", Animal== "Pigs") |>
  filter_index("1972-07" ~"2018-12") |>
  ACF(Count, lag_max = 250) |>
  autoplot()+
  theme(axis.text = element_text(size=6))


```

-   High auto-correlation but not much seasonality!

-   The correlation jumps at period = 12, 24...

-   We see the cylical pattern but the periodicity is not consistent.

    -   The correlation reverses at the 60 month-mark, which suggests that the trend is shifting.

    -   It continues to persis in the negatie direction until 114, which suggest that as time-periods inc the volume of pigs being slaughtered goes down.

    -   From 114 onwards the correlation changes dirction and starts to become less negative, although until the period 219 it is outside the significance line. This suggests that the autocrelation is strong albet it less negative. Thsi means as t increases the volume tends to go down.

#### 11. Google

```{r}
gafa_stock |>
  filter(Symbol == "GOOG", year(Date) >= 2018)
```

```{r}

dgoog <- gafa_stock |>
  filter(Symbol == "GOOG", year(Date) >= 2018) |>
  mutate(trading_day = row_number()) |>
  update_tsibble(index = trading_day, regular = TRUE) |>
  mutate(diff = difference(Close))
```

```{r}
dgoog
```

Plot the difference:

```{r}

dgoog |> autoplot(diff)
```

ACF on diffL:

```{r}

dgoog |> ACF(diff) |> autoplot()

```

Differencing has turned the data into a white noise.

Was the close data any different?

```{r}

dgoog |> autoplot(Close)

```

Is this diferent from the original?

```{r}
gafa_stock |>
  filter(Symbol == "GOOG", year(Date) >= 2018) |>
  autoplot(Close)

```

No difference between the original and the data with difference!

OK so let's check for auto-correlation in the Google data

```{r}

gafa_stock |>
  filter(Symbol == "GOOG", year(Date) >= 2018) |>
  ACF(Close) |> autoplot()


```

Interesting!

The original data had a clear autocorelation structure, but when we difference the time-seriees by taking one-day lag on closing data, the time-series becomes white-noise!
